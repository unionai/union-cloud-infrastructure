Description: >-
  UnionAI Provisioner CloudFormation Template: This CloudFormation template is designed to create an admin IAM role specifically for UnionAI to trust. The purpose of this role is to enable UnionAI to provision
  the infrastructure required for its operations.
Resources:
  CrossAccountRoleForAWSTrustedAdvisorUnion:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::479331373192:root
        Version: '2012-10-17'
      ManagedPolicyArns:
        - !Ref 'UnionaiReaderPermission'
        - !Ref 'UnionaiProvisionerPermission'
        - !Ref 'UnionaiUpdaterPermission'
        - !Ref 'UnionaiTerraformPermission'
      RoleName: unionai-provisioner
    Type: AWS::IAM::Role
  UnionaiProvisionerPermission:
    Properties:
      ManagedPolicyName: provisioner-policy-for-provisioner-role
      PolicyDocument:
        Statement:
          - Action:
              - logs:TagLogGroup
              - logs:DeleteLogGroup
              - logs:CreateLogGroup
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/opta-*/cluster:log-stream'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:opta-*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/opta-*:*'
          - Action:
              - cloudfront:CreateCloudFrontOriginAccessIdentity
              - cloudfront:DeleteCloudFrontOriginAccessIdentity
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:origin-access-identity/*'
          - Action:
              - ec2:DisassociateAddress
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - ec2:AllocateAddress
              - ec2:AttachInternetGateway
              - ec2:DetachInternetGateway
              - ec2:CreateInternetGateway
              - ec2:DeleteInternetGateway
              - ec2:CreateNatGateway
              - ec2:DeleteNatGateway
              - ec2:CreateRoute
              - ec2:DeleteRoute
              - ec2:CreateRouteTable
              - ec2:DeleteRouteTable
              - ec2:DisassociateRouteTable
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:CreateSecurityGroup
              - ec2:RevokeSecurityGroupEgress
              - ec2:DeleteSubnet
              - ec2:CreateNatGateway
              - ec2:CreateSubnet
              - ec2:DeleteFlowLogs
              - ec2:CreateFlowLogs
              - ec2:CreateVpc
              - ec2:ReleaseAddress
              - ec2:CreateTags
              - ec2:RunInstances
              - ec2:DeleteTags
              - ec2:CreateLaunchTemplate
              - ec2:CreateLaunchTemplateVersion
              - ec2:CreateVpcEndpoint
              - ec2:AssociateAddress
              - ec2:DeleteVpc
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-endpoint/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:elastic-ip/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:natgateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/subnet-*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group-rule/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-flow-log/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*'
          - Action:
              - ec2:AssociateRouteTable
              - ec2:DeleteSecurityGroup
              - ec2:DeleteVpcEndpoints
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-endpoint/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:elastic-ip/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:natgateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/subnet-*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group-rule/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-flow-log/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*'
          - Action:
              - eks:DeleteCluster
              - eks:CreateCluster
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
          - Action:
              - kms:CreateAlias
              - kms:DeleteAlias
              - kms:EnableKeyRotation
              - kms:PutKeyPolicy
              - kms:ScheduleKeyDeletion
              - kms:TagResource
              - kms:UntagResource
              - kms:CreateGrant
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/*'
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*'
          - Action:
              - kms:CreateKey
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - iam:DeleteOpenIDConnectProvider
              - iam:CreateOpenIDConnectProvider
              - iam:TagOpenIDConnectProvider
              - iam:UntagOpenIDConnectProvider
              - iam:CreateInstanceProfile
              - iam:RemoveRoleFromInstanceProfile
              - iam:DeleteInstanceProfile
              - iam:TagInstanceProfile
              - iam:UntagInstanceProfile
              - iam:AddRoleToInstanceProfile
              - iam:UpdateAssumeRolePolicy
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/*'
          - Action:
              - iam:CreatePolicy
              - iam:DeletePolicy
              - iam:TagPolicy
              - iam:UntagPolicy
              - iam:TagRole
              - iam:UntagRole
              - iam:CreateRole
              - iam:DeleteRole
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
              - iam:DetachRolePolicy
              - iam:DeleteRolePolicy
              - iam:CreatePolicyVersion
              - iam:DeletePolicyVersion
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/opta-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/unionai-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*userflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*adminflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitrole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitpolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*flyteathenapolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*flyteathenapolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*AWSService*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*.amazonaws.com/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/opta-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/unionai-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*userflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*adminflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*fluentbitrole*'
          - Action:
              - autoscaling:CreateLaunchConfiguration
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:DeleteAutoScalingGroup
              - autoscaling:SetInstanceProtection
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - '*'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  UnionaiReaderPermission:
    Properties:
      ManagedPolicyName: reader-policy-for-provisioner-role
      PolicyDocument:
        Statement:
          - Action:
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:opta-*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/opta-*:*'
          - Action:
              - logs:ListTagsLogGroup
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:opta-*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group::log-stream*'
              - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/eks/opta-*:*'
          - Action:
              - cloudfront:GetCloudFrontOriginAccessIdentity
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:cloudfront::${AWS::AccountId}:origin-access-identity/*'
          - Action:
              - s3:ListBucket
              - s3:GetEncryptionConfiguration
              - s3:GetBucketLogging
              - S3:GetBucketPolicy
              - s3:GetAccelerateConfiguration
              - s3:GetBucketAcl
              - s3:GetBucketWebsite
              - s3:GetBucketVersioning
              - s3:ListBucketVersions
              - s3:GetBucketCORS
              - s3:GetBucketLocation
              - s3:GetReplicationConfiguration
              - s3:GetBucketTagging
              - s3:GetBucketOwnershipControls
              - s3:GetBucketRequestPayment
              - s3:GetLifecycleConfiguration
              - s3:GetObject
              - s3:GetBucketObjectLockConfiguration
              - s3:GetBucketPublicAccessBlock
            Effect: Allow
            Resource:
              - arn:aws:s3:::opta-*
              - arn:aws:s3:::opta-*/*
              - arn:aws:s3:::union-*
              - arn:aws:s3:::union-*/*
          - Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeScalingActivities
              - autoscaling:DescribeTags
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - eks:DescribeCluster
              - eks:DescribeNodegroup
              - eks:DescribeUpdate
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*/opta-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*'
          - Action:
              - eks:ListTagsForResource
              - eks:ListNodegroups
              - eks:ListTagsForResource
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*/opta-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*'
          - Action:
              - kms:GetKeyPolicy
              - kms:GetKeyRotationStatus
              - kms:DescribeKey
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/*'
              - !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*'
          - Action:
              - kms:ListResourceTags
              - kms:ListAliases
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - iam:GetOpenIDConnectProvider
              - iam:GetInstanceProfile
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/*'
          - Action:
              - iam:GetPolicyVersion
              - iam:GetPolicy
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListPolicyVersions
              - iam:ListPolicyTags
              - iam:ListRoleTags
              - iam:ListInstanceProfilesForRole
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/opta-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/unionai-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*userflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*adminflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitrole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*fluentbitpolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:policy/*flyteathenapolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*flyteathenapolicy*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*AWSService*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*.amazonaws.com/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/opta-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/unionai-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*userflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*adminflyterole*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*fluentbitrole*'
          - Action:
              - iam:ListOpenIDConnectProviderTags
              - iam:ListInstanceProfileTags
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:instance-profile/*'
          - Action:
              - ec2:DescribeVpcAttribute
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeFlowLogs
              - ec2:DescribeInstanceTypeOfferings
              - ec2:DescribeInternetGateways
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkAcls
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribePrefixLists
              - ec2:DescribeRouteTables
              - ec2:DescribeSecurityGroupRules
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcEndpoints
              - ec2:DescribeVpcs
              - ec2:DescribeImages
              - ec2:DescribeLaunchTemplates
              - ec2:DescribeLaunchTemplateVersions
              - ec2:GetEbsEncryptionByDefault
              - iam:ListRoles
              - iam:ListPolicies
            Effect: Allow
            Resource:
              - '*'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  UnionaiTerraformPermission:
    Properties:
      ManagedPolicyName: terraform-policy-for-provisioner-role
      PolicyDocument:
        Statement:
          - Action:
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:PutEncryptionConfiguration
              - s3:DeleteBucketPolicy
              - s3:PutBucketPolicy
              - s3:PutBucketTagging
              - s3:PutObject
              - s3:DeleteObject
              - s3:PutBucketAcl
              - s3:PutObjectAcl
              - s3:PutBucketAcl
              - s3:PutBucketLogging
              - s3:PutBucketVersioning
              - s3:PutBucketCORS
              - s3:PutBucketLocation
              - s3:PutReplicationConfiguration
              - s3:PutBucketTagging
              - s3:PutBucketOwnershipControls
              - s3:PutBucketRequestPayment
              - s3:PutLifecycleConfiguration
              - s3:PutBucketObjectLockConfiguration
              - s3:PutBucketPublicAccessBlock
              - s3:DeleteObject
              - s3:DeleteObjectVersion
            Effect: Allow
            Resource:
              - arn:aws:s3:::opta-*
              - arn:aws:s3:::opta-*/*
              - arn:aws:s3:::union-*
              - arn:aws:s3:::union-*/*
          - Action:
              - iam:CreateServiceLinkedRole
              - iam:PassRole
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/aws-service-role/*.amazonaws.com/*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/opta-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/unionai-*'
          - Action:
              - ec2:EnableEbsEncryptionByDefault
              - ec2:ModifyEbsDefaultKmsKeyId
              - ec2:DisableEbsEncryptionByDefault
              - ec2:GetEbsEncryptionByDefault
            Condition:
              StringEqualsIfExists:
                ec2:Region: !Sub '${AWS::Region}'
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:CreateTable
              - dynamodb:DeleteTable
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/opta-*'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
  UnionaiUpdaterPermission:
    Properties:
      ManagedPolicyName: updater-policy-for-provisioner-role
      PolicyDocument:
        Statement:
          - Action:
              - ec2:ModifyVpcAttribute
              - ec2:ModifyVpcEndpoint
              - ec2:ModifySubnetAttribute
              - ec2:ModifyLaunchTemplate
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-endpoint/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:internet-gateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:elastic-ip/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:natgateway/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:route-table/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/subnet-*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group-rule/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc-flow-log/*'
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/*'
          - Action:
              - eks:UpdateNodegroupConfig
              - eks:UpdateNodegroupVersion
              - eks:UpdateClusterConfig
              - eks:UpdateClusterVersion
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*/opta-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*'
          - Action:
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:CreateOrUpdateTags
              - autoscaling:DeleteTags
            Condition:
              StringEqualsIfExists:
                aws:RequestTag/ManagedByUnion: 'true'
            Effect: Allow
            Resource:
              - '*'
          - Action:
              - eks:CreateNodegroup
              - eks:TagResource
              - eks:UntagResource
              - eks:DeleteNodegroup
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*/opta-*/*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:addon/opta-*/*/*'
          - Action:
              - eks:CreateAddon
              - eks:UpdateAddon
              - eks:DeleteAddon
              - eks:DescribeAddonVersions
              - eks:DescribeAddon
              - eks:ListAddons
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/opta-*'
              - !Sub 'arn:aws:eks:${AWS::Region}:${AWS::AccountId}:addon/opta-*/*/*'
        Version: '2012-10-17'
    Type: AWS::IAM::ManagedPolicy
